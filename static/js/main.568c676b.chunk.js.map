{"version":3,"sources":["Components/pokemons-list/pokemons-list.js","actions/pokedexActions.js","reducer/pokedex-reducer.js","store/ConfigureStore.js","colors/type-colors.js","Components/pokemon-card/pokemon-card.js","Components/load-btn/load-btn.js","Components/title/title.js","Components/filter/filter.js","Components/opened-pokemon/opened-pokemon.js","App.js","index.js"],"names":["getPokemonCopy","dataCopy","filterCopy","getPokemonSuccessAction","data","type","payload","getTypesWithIdAction","getTypesAction","getTypes","axios","method","url","initialState","openedPokemon","limit","typesWithId","filter","types","pokedexReducer","state","action","obj","id","name","store","createStore","applyMiddleware","thunk","typeColors","value","PokemonCard","this","props","getPokemon","split","toUpperCase","slice","length","href","style","textDecoration","color","className","onClick","src","alt","elements","React","Component","undefined","map","bgColor","key","backgroundColor","LoadBtn","incLimit","getPokemons","PokemonsList","pokemons","pokemon","arr","Title","options","Filter","changeFilter","onChange","event","target","OpenedPokemon","forEach","stats","base_stat","weight","moves","App","connect","getState","dispatch","then","res","results","i","newValue","ReactDOM","render","document","getElementById"],"mappings":"qSAKIA,EAAgBC,EAAUC,E,mGC6BxBC,EAA0B,SAACC,GAC7B,MAAO,CACHC,KA/B2B,sBAgC3BC,QAASF,IAqCXG,EAAuB,SAACH,GAC1B,MAAO,CACHC,KAnEyB,4BAoEzBC,QAASF,IAGXI,EAAiB,SAACJ,GACpB,MAAO,CACHC,KA5EyB,oBA6EzBC,QAASF,IAGXK,EAAW,WACd,OAAQC,IAAM,CACTC,OAAQ,MACRC,IAAI,8CChFNC,EAAe,CACnBT,KAAO,GACPU,cAAe,KACfC,MAAQ,GACRC,YAAc,GACdC,OAAS,MACTC,MAAQ,IAgCKC,EA7BQ,WAA8B,IAA7BC,EAA4B,uDAAtBP,EAAaQ,EAAS,uCAClD,OAAQA,EAAOhB,MACb,IDlBgC,uBCmB9B,OAAO,eAAIe,GACb,IDnBgC,uBCqB/B,OAAO,2BAAIA,GAAX,IAAiBhB,KAAOiB,EAAOf,QAAQU,YAAa,KACrD,IDlBqB,YCmBnB,OAAO,2BAAII,GAAX,IAAiBL,MAAOK,EAAML,OAAO,IACvC,IDvB+B,sBCwB7B,OAAO,eAAIK,GACb,IDxB+B,sBC0B7B,OAAO,2BAAIA,GAAX,IAAiBN,cAAeO,EAAOf,UACzC,IDvB6B,4BCwB3B,IAAIgB,EAAM,CACRC,GAAKF,EAAOf,QAAQiB,GACpBL,MAAQG,EAAOf,QAAQY,OAEzB,OAAO,2BAAIE,GAAX,IAAiBJ,YAAY,GAAD,mBAAMI,EAAMJ,aAAZ,CAAwBM,MACtD,IDhC6B,oBCiC3B,OAAO,2BAAIF,GAAX,IAAiBF,MAAM,CAAE,CAACM,KAAK,QAAT,mBAAoBH,EAAOf,YACnD,ID9ByB,gBC+BvB,OAAO,2BAAIc,GAAX,IAAiBH,OAAQI,EAAOf,UAClC,QACE,OAAO,eAAIc,K,gBCpCFK,EAFDC,YAAYP,EAAeQ,YAAgBC,M,OCiB1CC,G,MAtBI,CACf,CAACL,KAAM,SAASM,MAAQ,WACxB,CAACN,KAAM,WAAWM,MAAQ,WAC1B,CAACN,KAAM,SAASM,MAAQ,WACxB,CAACN,KAAM,SAASM,MAAQ,WACxB,CAACN,KAAM,SAASM,MAAQ,WACxB,CAACN,KAAM,OAAOM,MAAQ,WACtB,CAACN,KAAM,MAAMM,MAAQ,WACrB,CAACN,KAAM,QAAQM,MAAQ,WACvB,CAACN,KAAM,QAAQM,MAAQ,WACvB,CAACN,KAAM,OAAOM,MAAQ,WACtB,CAACN,KAAM,QAAQM,MAAQ,WACvB,CAACN,KAAM,QAAQM,MAAQ,WACvB,CAACN,KAAM,WAAWM,MAAQ,WAC1B,CAACN,KAAM,UAAUM,MAAQ,WACzB,CAACN,KAAM,MAAMM,MAAQ,WACrB,CAACN,KAAM,SAASM,MAAQ,WACxB,CAACN,KAAM,OAAOM,MAAQ,WACtB,CAACN,KAAM,QAAQM,MAAQ,WACvB,CAACN,KAAM,UAAUM,MAAQ,WACzB,CAACN,KAAM,SAASM,MAAQ,aCjBPC,E,uKAEP,IAAD,EAC0BC,KAAKC,MAAjCV,EADE,EACFA,GAAGC,EADD,EACCA,KAAKU,EADN,EACMA,WAAWhB,EADjB,EACiBA,MAEtB,OADCM,EAAOA,EAAKW,MAAM,IAAI,GAAGC,cAAgBZ,EAAKa,MAAM,EAAEb,EAAKc,QAExD,uBAAGC,KAAK,SAASC,MAAO,CAACC,eAAe,OAAOC,MAAM,UACrD,yBAAKC,UAAW,eAAgBC,QAAS,kBAAIV,EAAWX,KACpD,yBAAKoB,UAAU,cACVE,IAAG,mFAA+EtB,EAA/E,QAAyFuB,IAAI,KACrG,wBAAIH,UAAU,gBAAgBnB,GAC9B,yBAAKmB,UAAW,SACXI,EAAS7B,U,GAZW8B,IAAMC,WAmBzCF,EAAW,SAAC7B,GACd,QAAegC,IAAZhC,EAAM,GAEL,OAAOA,EAAM,GAAGA,MAAMiC,KAAI,SAAA9C,GACvB,IAAI+C,EAASvB,EAAWZ,QAAO,SAAAa,GAAK,OAAIA,EAAMN,OAASnB,EAAKA,KAAKmB,QAChE,OAAO,yBAAK6B,IAAKhD,EAAKA,KAAKO,IAAK+B,UAAW,OAAQH,MAAO,CAACc,gBAAiBF,EAAQ,GAAGtB,QAAUzB,EAAKA,KAAKmB,UClBxG+B,G,YANC,SAACtB,GACb,OACI,4BAASU,UAAW,WAAYtC,KAAM,SAAUuC,QAAS,WAAKX,EAAMuB,WAAWvB,EAAMwB,YAAYxB,EAAMlB,SAAvG,eNeO2C,EAdM,SAAC,GAA8D,IAA7DtD,EAA4D,EAA5DA,KAAMoD,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,YAAavB,EAA+B,EAA/BA,WAAYnB,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,OAInE,OAHAjB,EAAiBkC,EACjBjC,EAAWG,EACXF,EAAae,EAET,yBAAK0B,UAAU,iBACVI,EAAS3C,EAAKA,MACf,kBAAC,EAAD,CAASW,MAAOA,EACPyC,SAAUA,EACVC,YAAaA,MAQ5BV,EAAW,SAACY,GAEd,OAAOA,EAASR,KAAI,SAAAS,GAChB,IAAIC,EAAMD,EAAQhD,IAAIuB,MAAM,KACxBZ,EAAKsC,EAAIA,EAAIvB,OAAS,GACtBpB,EAAQjB,EAASe,YAAYC,QAAO,SAAAa,GAAK,OAAIA,EAAMP,IAAMA,KAC7D,GAAkB,OAAdrB,EACA,OAAO,kBAAC,EAAD,eAAamD,IAAK9B,EAAIW,WAAYlC,EAAgBkB,MAAOA,EAAOK,GAAIA,GAAOqC,IAElF,IAAI1C,EAAQjB,EAASe,YAAYC,QAAO,SAAAa,GAAK,OAAIA,EAAMP,IAAMA,KAE9D,OAAIL,EAAMoB,OAAO,EACQpB,EAAM,GAAGA,MAAMD,QAAO,SAAAa,GAAK,OAAIA,EAAMzB,KAAKmB,OAAStB,KACvDoC,OAAS,EACd,kBAAC,EAAD,eAAae,IAAK9B,EAAIW,WAAYlC,EAAgBkB,MAAOA,EAAOK,GAAIA,GAAOqC,IACxE,UAJnB,MO3BIE,G,MALD,WACV,OACI,wBAAInB,UAAU,SAAd,aCQFoB,G,MAAU,SAAC7C,GACb,OAAOA,EAAMiC,KAAI,SAAArB,GACb,OAAO,4BAAQuB,IAAKvB,EAAMN,KAAMM,MAAOA,EAAMN,MAAOM,EAAMN,WAInDwC,EAhBA,SAAC,GAAwB,IAAvB/B,EAAsB,EAAtBA,MAAMgC,EAAgB,EAAhBA,aAEnB,OACI,4BAAQtB,UAAW,SAAUuB,SAAW,SAAAC,GAAK,OAAIF,EAAaE,EAAMC,OAAOtC,SACtEiC,EAAQ9B,KCsDNoC,G,MAzDO,SAACpC,GACnB,IAAI5B,EAAO,GAOX,OANgB,OAAb4B,EAAM7B,MACL6B,EAAM7B,KAAKc,MAAMoD,SAAQ,SAAAxC,GACrBzB,GAAQyB,EAAMzB,KAAKmB,KACnBnB,GAAQ,QAIA,OAAb4B,EAAM7B,KAAa,yBAAKuC,UAAW,0BAC/B,uBAAGnB,KAAM,SACR,yBAAKqB,IAAG,mFAA8EZ,EAAM7B,KAAKmB,GAAzF,QAAoGoB,UAAU,iBACtH,wBAAIA,UAAU,cAAcV,EAAM7B,KAAKoB,KAAKa,MAAM,EAAE,GAAGD,cAAcH,EAAM7B,KAAKoB,KAAKa,MAAM,EAAEJ,EAAM7B,KAAKoB,KAAKc,SAE1G,yBAAKK,UAAU,SACd,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,QAAhB,QACA,yBAAKA,UAAW,QAAStC,EAAKgC,MAAM,EAAEhC,EAAKiC,OAAO,KAEnD,yBAAKK,UAAW,OACZ,yBAAKA,UAAW,QAAhB,UACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAEjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,WACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAEjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,MACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAGjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,aACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAEjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,cACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAEjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,SACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKmE,MAAM,GAAGC,YAEjD,yBAAK7B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,UACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKqE,SAExC,yBAAK9B,UAAW,OACZ,yBAAKA,UAAW,QAAhB,SACA,yBAAKA,UAAW,QAASV,EAAM7B,KAAKsE,MAAMpC,YAIlD,OC9CTqC,G,wLAEE3C,KAAKC,MAAMwB,YAAYzB,KAAKC,MAAM7B,KAAKW,OACvCiB,KAAKC,MAAMC,WAAW,K,+BAK1B,OACI,yBAAKS,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASV,MAAQD,KAAKC,MAAM7B,KAAKc,MAAO+C,aAAgBjC,KAAKC,MAAMgC,eACnE,yBAAKtB,UAAW,QAEhB,kBAAC,EAAD,CAAevC,KAAQ4B,KAAKC,MAAM7B,KAAKU,gBAEvC,kBAAC,EAAD,CAAcV,KAAQ4B,KAAKC,MAAM7B,KACnBoD,SAAUxB,KAAKC,MAAMuB,SACrBC,YAAazB,KAAKC,MAAMwB,YACxBvB,WAAcF,KAAKC,MAAMC,WACzBjB,OAAUe,KAAKC,MAAM7B,KAAKa,OAC1BF,MAASiB,KAAKC,MAAM7B,KAAKW,c,GArBjCiC,IAAMC,YA2CT2B,eAdS,WACpB,MAAM,CACFxE,KAAOqB,EAAMoD,eAGM,SAAAC,GACvB,MAAM,CACLrB,YAAc,SAAC1C,GAAD,OAAS+D,ETND,SAAC/D,GAExB,OAAO,SAAA+D,GACHrE,IAAWsE,MAAK,SAAAC,GAAG,OAAEF,EAAStE,EAAewE,EAAI5E,KAAK6E,aACtDH,EA/BG,CACHzE,KAb4B,yBA6C5BK,IAAM,CACFC,OAAQ,MACRC,IAAI,2CAAD,OAA6CG,KACjDgE,MAAK,SAAAC,GACJF,EAhCD,CACHzE,KAjB4B,uBAkB5BC,QA8BsC0E,EAAI5E,KAAK6E,UAC3C,IAAK,IAAIC,EAAI,EAAGA,GAAKnE,EAAOmE,IACxBxE,IAAM,CACFC,OAAQ,MACRC,IAAI,qCAAD,OAAuCsE,KAC3CH,MAAK,SAAAC,GAAG,OAAIF,EAASvE,EAAqByE,EAAI5E,cST5BqD,CAAY1C,KACzCmB,WAAa,SAACX,GAAD,OAAMuD,ETeD,WAAa,IAAZvD,EAAW,uDAAN,EAC5B,OAAO,SAAAuD,GACHA,EAnCG,CACHzE,KA3B2B,wBA8D3BK,IAAM,CACFC,OAAQ,MACRC,IAAI,qCAAD,OAAuCW,KAC3CwD,MAAK,SAAAC,GACJF,EAAS3E,EAAwB6E,EAAI5E,WStBb8B,CAAWX,KACvC0C,aAAc,SAACkB,GAAD,OAAaL,ET2CP,SAACK,GACzB,MAAO,CACH9E,KApFqB,gBAqFrBC,QAAU6E,GS9C0BlB,CAAakB,KACjD3B,SAAU,kBAAIsB,ETzBX,CACHzE,KAnBiB,kBS+CVuE,CAA4CD,GC/C3DS,IAASC,OACL,kBAAC,IAAD,CAAU5D,MAAOA,GACjB,kBAAC,EAAD,OACY6D,SAASC,eAAe,W","file":"static/js/main.568c676b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PokemonCard from \"../pokemon-card/pokemon-card\";\r\nimport \"./pokemon-list.css\"\r\nimport LoadBtn from \"../load-btn/load-btn\";\r\n\r\nlet getPokemonCopy, dataCopy, filterCopy;\r\nconst PokemonsList = ({data, incLimit, getPokemons, getPokemon, limit, filter}) => {\r\n    getPokemonCopy = getPokemon;\r\n    dataCopy = data;\r\n    filterCopy = filter;\r\n    return (\r\n        <div className=\"pokemons-list\">\r\n            {elements(data.data)}\r\n            <LoadBtn limit={limit}\r\n                     incLimit={incLimit}\r\n                     getPokemons={getPokemons}/>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default PokemonsList;\r\n\r\n\r\nconst elements = (pokemons) => {\r\n\r\n    return pokemons.map(pokemon => {\r\n        let arr = pokemon.url.split('/');\r\n        let id = arr[arr.length - 2];\r\n        let types = dataCopy.typesWithId.filter(value => value.id == id);\r\n        if (filterCopy == 'all') {\r\n            return <PokemonCard key={id} getPokemon={getPokemonCopy} types={types} id={id}{...pokemon}/>\r\n        } else {\r\n            let types = dataCopy.typesWithId.filter(value => value.id == id);\r\n\r\n           if (types.length>0) {\r\n                const filteredArr = types[0].types.filter(value => value.type.name === filterCopy);\r\n                if (filteredArr.length > 0) {\r\n                    return <PokemonCard key={id} getPokemon={getPokemonCopy} types={types} id={id}{...pokemon}/>\r\n                } else return null\r\n            }\r\n        }\r\n    })\r\n};\r\n","import axios from \"axios\"\r\n\r\nexport const GET_POKEMONS_REQUEST = \"GET_POKEMONS_REQUEST\";\r\nexport const GET_POKEMONS_SUCCESS = \"GET_POKEMONS_SUCCESS\";\r\nexport const GET_POKEMON_REQUEST = \"GET_POKEMON_REQUEST\";\r\nexport const GET_POKEMON_SUCCESS = \"GET_POKEMON_SUCCESS\";\r\nexport const GET_TYPES_SUCCESS = \"GET_TYPES_SUCCESS\";\r\nexport const INC_LIMIT = \"INC_LIMIT\";\r\n\r\nexport const GET_TYPES_WITH_ID = \"GET_TYPES_WITH_ID_SUCCESS\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\n\r\n\r\nconst getPokemonsRequestAction = () => {\r\n    return {\r\n        type: GET_POKEMONS_REQUEST\r\n    }\r\n};\r\nconst getPokemonsSuccessAction = (data) => {\r\n    return {\r\n        type: GET_POKEMONS_SUCCESS,\r\n        payload: data\r\n    }\r\n};\r\nexport const incLimit = () => {\r\n    return {\r\n        type: INC_LIMIT\r\n    }\r\n};\r\nconst getPokemonRequestAction = () => {\r\n    return {\r\n        type: GET_POKEMON_REQUEST\r\n    }\r\n};\r\nconst getPokemonSuccessAction = (data) => {\r\n    return {\r\n        type: GET_POKEMON_SUCCESS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const getPokemons = (limit) => {\r\n    //console.log(limit);\r\n    return dispatch => {\r\n        getTypes().then(res=>dispatch(getTypesAction(res.data.results)));\r\n        dispatch(getPokemonsRequestAction());\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `http://pokeapi.co/api/v1/pokemon/?limit=${limit}`\r\n        }).then(res => {\r\n            dispatch(getPokemonsSuccessAction(res.data.results));\r\n            for (let i = 1; i <= limit; i++) {\r\n                axios({\r\n                    method: 'get',\r\n                    url: `https://pokeapi.co/api/v2/pokemon/${i}`\r\n                }).then(res => dispatch(getTypesWithIdAction(res.data))\r\n                )\r\n            }\r\n        });\r\n\r\n    }\r\n};\r\nexport const getPokemon = (id = 2) => {\r\n    return dispatch => {\r\n        dispatch(getPokemonRequestAction());\r\n        axios({\r\n            method: 'get',\r\n            url: `https://pokeapi.co/api/v2/pokemon/${id}`\r\n        }).then(res => {\r\n            dispatch(getPokemonSuccessAction(res.data));\r\n        })\r\n    }\r\n};\r\nconst getTypesWithIdAction = (data) => {\r\n    return {\r\n        type: GET_TYPES_WITH_ID,\r\n        payload: data\r\n    }\r\n};\r\nconst getTypesAction = (data) => {\r\n    return {\r\n        type: GET_TYPES_SUCCESS,\r\n        payload: data\r\n    }\r\n};\r\nconst getTypes = ()=>{\r\n   return  axios({\r\n        method: 'get',\r\n        url: `http://pokeapi.co/api/v1/type/?limit=999`\r\n    })\r\n};\r\nexport const changeFilter = (newValue)=>{\r\n    return {\r\n        type : CHANGE_FILTER,\r\n        payload : newValue\r\n    }\r\n};\r\n","import {GET_POKEMONS_SUCCESS,\r\n  GET_POKEMONS_REQUEST,\r\n  INC_LIMIT,\r\n  GET_POKEMON_SUCCESS,\r\n  GET_POKEMON_REQUEST,\r\n  GET_TYPES_SUCCESS,\r\n    CHANGE_FILTER,\r\nGET_TYPES_WITH_ID} from \"../actions/pokedexActions\";\r\n\r\nconst initialState = {\r\n  data : [],\r\n  openedPokemon: null,\r\n  limit : 12,\r\n  typesWithId : [],\r\n  filter : 'all',\r\n  types : []\r\n};\r\n\r\nconst pokedexReducer = (state=initialState,action)=>{\r\n  switch (action.type) {\r\n    case GET_POKEMONS_REQUEST:\r\n      return {...state};\r\n    case GET_POKEMONS_SUCCESS:\r\n      //console.log(action.payload);\r\n     return {...state,data : action.payload,typesWithId: []};\r\n    case INC_LIMIT:\r\n      return {...state,limit: state.limit+=6};\r\n    case GET_POKEMON_REQUEST:\r\n      return {...state};\r\n    case GET_POKEMON_SUCCESS:\r\n      //console.log(action.payload);\r\n      return {...state,openedPokemon: action.payload};\r\n    case GET_TYPES_WITH_ID:\r\n      let obj = {\r\n        id : action.payload.id,\r\n        types : action.payload.types\r\n      };\r\n      return {...state,typesWithId: [...state.typesWithId,obj]};\r\n    case GET_TYPES_SUCCESS:\r\n      return {...state,types: [{name:'all'}, ...action.payload]};\r\n    case CHANGE_FILTER:\r\n      return {...state,filter: action.payload};\r\n    default:\r\n      return {...state}\r\n  }\r\n};\r\n\r\nexport default pokedexReducer;","import {createStore,applyMiddleware} from \"redux\";\r\nimport pokedexReducer from \"../reducer/pokedex-reducer\";\r\nimport {logger} from \"redux-logger/src\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(pokedexReducer,applyMiddleware(thunk));\r\n\r\nexport default store;","const typeColors = [\r\n    {name :'normal',value : '#9fa4a8'},\r\n    {name :'fighting',value : '#ff9000'},\r\n    {name :'flying',value : '#63a4d8'},\r\n    {name :'poison',value : '#7e58ef'},\r\n    {name :'ground',value : '#a05216'},\r\n    {name :'rock',value : '#9fa4a8'},\r\n    {name :'bug',value : '#938a35'},\r\n    {name :'ghost',value : '#c7d2db'},\r\n    {name :'steel',value : '#9fa4a8'},\r\n    {name :'fire',value : '#ff0000'},\r\n    {name :'water',value : '#008cff'},\r\n    {name :'grass',value : '#27ba14'},\r\n    {name :'electric',value : '#fff600'},\r\n    {name :'psychic',value : '#9fa4a8'},\r\n    {name :'ice',value : '#8bbde5'},\r\n    {name :'dragon',value : '#ff0000'},\r\n    {name :'dark',value : '#9fa4a8'},\r\n    {name :'fairy',value : '#aa00ff'},\r\n    {name :'unknown',value : '#9fa4a8'},\r\n    {name :'shadow',value : '#9fa4a8'}\r\n];\r\nexport default typeColors;","import React from \"react\";\r\nimport \"./pokemon-card.css\"\r\nimport typeColors from \"../../colors/type-colors\";\r\nexport default class PokemonCard extends React.Component{\r\n\r\n    render() {\r\n      let {id,name,getPokemon,types} = this.props;\r\n         name = name.split('')[0].toUpperCase() + name.slice(1,name.length);\r\n        return(\r\n            <a href=\"#table\" style={{textDecoration:'none',color:'black'}}>\r\n            <div className={\"pokemon-card\"} onClick={()=>getPokemon(id)}>\r\n                <img className=\"pokemon-img\"\r\n                     src= {`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt=\"\"/>\r\n                <h3 className=\"pokemon-name\">{name}</h3>\r\n                <div className={\"types\"}>\r\n                    {elements(types)}\r\n                </div>\r\n            </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\nconst elements = (types)=>{\r\n    if(types[0]!== undefined) {\r\n\r\n        return types[0].types.map(type => {\r\n           let bgColor= typeColors.filter(value => value.name === type.type.name);\r\n            return <div key={type.type.url} className={\"type\"} style={{backgroundColor: bgColor[0].value }}>{type.type.name}</div>\r\n        })\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport \"./load-btn.css\"\r\n\r\nconst LoadBtn = (props)=>{\r\n    return(\r\n        <button  className={\"load-btn\"} type={\"button\"} onClick={()=>{props.incLimit();props.getPokemons(props.limit);}}>Load More</button>\r\n    )\r\n};\r\n\r\nexport default LoadBtn;","import React from \"react\";\r\nimport \"./title.css\"\r\nconst Title = ()=>{\r\n    return(\r\n        <h1 className=\"title\">Pokedex</h1>\r\n    )\r\n};\r\nexport default Title;","import React from \"react\";\r\nimport \"./filter.css\"\r\nconst Filter = ({props,changeFilter})=>{\r\n    //console.log(props);\r\n    return (\r\n        <select className={\"filter\"} onChange={(event => changeFilter(event.target.value))}>\r\n            {options(props)}\r\n\r\n        </select>\r\n    )\r\n};\r\n\r\nconst options = (types)=>{\r\n    return types.map(value=>{\r\n        return <option key={value.name} value={value.name}>{value.name}</option>\r\n    })\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport \"./opened-pokemon.css\"\r\n\r\nconst OpenedPokemon = (props)=>{\r\n    let type = '';\r\n    if(props.data!==null) {\r\n        props.data.types.forEach(value => {\r\n            type += value.type.name;\r\n            type += ', '\r\n        });\r\n    }\r\n    return(\r\n       props.data!==null? <div className={\"characterization-table\"}>\r\n           <a name={\"table\"}>\r\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.data.id}.png`}  className=\"table-avatar\"/>\r\n            <h2 className=\"table-name\">{props.data.name.slice(0,1).toUpperCase()+props.data.name.slice(1,props.data.name.length)}</h2>\r\n\r\n               <div className=\"table\">\r\n                <div className={\"row\"}>\r\n                    <div className={\"cell\"}>Type</div>\r\n                    <div className={\"cell\"}>{type.slice(0,type.length-2)}</div>\r\n                </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>Attack</div>\r\n                       <div className={\"cell\"}>{props.data.stats[4].base_stat}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>Defense</div>\r\n                       <div className={\"cell\"}>{props.data.stats[3].base_stat}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>HP</div>\r\n                       <div className={\"cell\"}>{props.data.stats[5].base_stat}</div>\r\n                   </div>\r\n\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>SP Attack</div>\r\n                       <div className={\"cell\"}>{props.data.stats[2].base_stat}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>SP Defense</div>\r\n                       <div className={\"cell\"}>{props.data.stats[1].base_stat}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>Speed</div>\r\n                       <div className={\"cell\"}>{props.data.stats[0].base_stat}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>Weight</div>\r\n                       <div className={\"cell\"}>{props.data.weight}</div>\r\n                   </div>\r\n                   <div className={\"row\"}>\r\n                       <div className={\"cell\"}>Moves</div>\r\n                       <div className={\"cell\"}>{props.data.moves.length}</div>\r\n                   </div>\r\n            </div>\r\n           </a>\r\n        </div>:null\r\n    )\r\n};\r\nexport default OpenedPokemon;","import React from \"react\";\r\nimport store from \"./store/ConfigureStore\";\r\nimport {connect} from \"react-redux\";\r\nimport PokemonsList from \"./Components/pokemons-list/pokemons-list\";\r\nimport Title from \"./Components/title/title\";\r\nimport Filter from \"./Components/filter/filter\";\r\nimport OpenedPokemon from \"./Components/opened-pokemon/opened-pokemon\";\r\nimport {getPokemons,incLimit,getPokemon,changeFilter} from \"./actions/pokedexActions\";\r\nimport \"./App.css\"\r\n\r\n\r\nclass App extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getPokemons(this.props.data.limit);\r\n        this.props.getPokemon(1);\r\n    }\r\n\r\n    render() {\r\n\r\n    return(\r\n        <div className=\"pokedex\">\r\n            <Title/>\r\n            <Filter  props= {this.props.data.types} changeFilter = {this.props.changeFilter}/>\r\n            <div className={\"main\"}>\r\n\r\n            <OpenedPokemon data = {this.props.data.openedPokemon}/>\r\n\r\n            <PokemonsList data = {this.props.data}\r\n                          incLimit={this.props.incLimit}\r\n                          getPokemons={this.props.getPokemons}\r\n                          getPokemon = {this.props.getPokemon}\r\n                          filter = {this.props.data.filter}\r\n                          limit = {this.props.data.limit}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ()=>{\r\n    return{\r\n        data : store.getState()\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n     getPokemons : (limit)=>dispatch(getPokemons(limit)),\r\n        getPokemon : (id)=>dispatch(getPokemon(id)),\r\n        changeFilter: (newValue) =>dispatch(changeFilter(newValue)),\r\n        incLimit: ()=>dispatch(incLimit())\r\n\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/ConfigureStore\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>,document.getElementById('root'));"],"sourceRoot":""}